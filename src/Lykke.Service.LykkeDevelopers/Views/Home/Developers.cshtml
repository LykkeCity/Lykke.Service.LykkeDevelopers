@using Lykke.Service.LykkeDevelopers.Models
@using Lykke.Service.LykkeDevelopers.Extentions
@using Newtonsoft.Json
@model DevelopersModel

@{
    ViewBag.Title = "Lykke Developers";
}

<h2>Developers</h2>


<div class="editItems">

</div>

@section Scripts {
<script type="text/javascript">
    $(function () {

        function myAlertTop(text) {
            txt = document.createTextNode(text);
            var span = $(".myAlert-top").children('span');
            span.html('');
            span.append(txt);

            $(".myAlert-top").show();

            setTimeout(function () {
                //$(".custom-alert").alert('close'); <--- Do not use this

                $(".myAlert-top").slideUp(500, function () {
                    $(this).hide();
                });
            }, 5000);
        }

        $('[data-toggle="tooltip"]').tooltip();

        function elemCancel(elem) {
            $(elem).parent().parent().remove();
        }

        function makeKeyValuesInputAutocomplete() {
            $('#editRole').find('input.keyValueInput').autocomplete({
                source: $.keyValueNames
            });
        }

        function addKeyValue(elem) {
            var html = '<tr class="keyValues">' +
                '<td class="keyValueRowKey"><input type="text" class="viewMode form-control keyValueInput"/></td>' +
                '<td class="access"><select class="form-control"><option value="false" selected>Read</option><option value="true">Write</option></select></td>' +
                '<td><a href="javascript:;" class="elemCancel col-md-1" onclick="elemCancel(this)" style="width:20px; height:20px;"></a></td></tr>';

            $(elem).parent().before(html);
            makeKeyValuesInputAutocomplete();
        }

        $.generateTable = function (json, teams) {
            var list = eval('( ' + json + ')');
            var listTeams = eval('( ' + teams + ')');
            var html =
                '<table class="table table-stripped table-bordered"><tr><th>Email</th><th>First Name</th><th>Last Name</th><th>Telegram account</th><th>GitHub account</th><th>Team</th><th>Actions</th></tr>';
            for (var i = 0; i < list.length; i++) {
                var elem = list[i];
                html += '<tr elemId="' + elem.RowKey + '"> ' +
                    '<td class="col-md-2 email"><span class="viewMode">' + elem.Email + '</span><input type="text" class="editMode form-control"/></td>' +
                    '<td class="fName"><span class="viewMode">' + elem.FirstName + '</span><input type="text" class="editMode form-control"/></td>' +
                    '<td class="lName"><span class="viewMode">' + elem.LastName + '</span><input type="text" class="editMode form-control"/></td>' +
                    '<td class="tAcc"><span class="viewMode">' + elem.TelegramAcc + '</span><input type="text" class="editMode form-control"/></td>' +
                    '<td class="gAcc"><span class="viewMode">' + elem.GithubAcc + '</span><input type="text" class="editMode form-control"/></td>' +
                    '<td class="col-md-2 team"><span class="viewMode team1 ' + (elem.Team == 'Team was removed' ? 'red': '') + '">' + elem.Team + '</span>' +
                    '<span class="editMode"><select class="team-select" name="state">';
                for (var j = 0; j < listTeams.length; j++) {
                    html += '<option value="' + listTeams[j].Name + '">' + listTeams[j].Name + '</option>';
                }
                             
                html +=  '</select></span></td>' +
                    '<td class="actions" style="text-align:center">' +
                        '<a href="javascript:;" class="elemEdit"></a> ' +
                        '<a href="javascript:;" class="elemDelete"></a>' +
                        '<a href="javascript:;" style="display:none" class="elemSave"></a>' +
                        '<a href="javascript:;" style="display:none" class="elemCancel"></a>' +
                    '</tr>';

            }

            html +=
                '<tr elemId="*">' +
                '<td class="col-md-2 email"><input class="form-control" placeholder="Email" type="text"/></td>' +
                '<td class="fName"><input class="form-control" placeholder="First Name"  type="text"/></td>' +
                '<td class="lName"><input class="form-control" placeholder="Last Name" type="text" /></td>' +
                '<td class="tAcc"><input class="form-control" placeholder="Telegram account" type="text" /></td>' +
                '<td class="gAcc"><input class="form-control" placeholder="Github account" type="text" /></td>' +
                '<td class="col-md-2 team">' +
                '<select class="team-select form-control" name="state">';
            for (var j = 0; j < listTeams.length; j++) {
                html += '<option value="' + listTeams[j].Name + '">' + listTeams[j].Name + '</option>';
            }

            html += '</select></td>' +
                '<td class="actions" style="text-align:center"><a href="javascript:;" class="elemSave"></a><a href="javascript:;" class="elemCancel"></a></td></tr>';

            html += '</table>';
            var parent = $('.editItems');
            parent.empty();
            parent.append($(html));

            $('.team-select').select2({
                placeholder: "Select Team",
                width: '100%'
            });;

            $('.elemEdit').click(function() {
                var parent = $(this).parents('tr');
                if (parent.find('td.email span').text() == 'null'){
                    parent.find('.editMode').val('');
                }
                else {
                    parent.find('.editMode').val(parent.find('td.email span').text());
                }

                if (parent.find('td.fName span').text() == 'null') {
                    parent.find('td.fName input').val('');
                }
                else {
                    parent.find('td.fName input').val(parent.find('td.fName span').text())
                }

                if (parent.find('td.lName span').text() == 'null') {
                    parent.find('td.lName input').val('');
                }
                else {
                    parent.find('td.lName input').val(parent.find('td.lName span').text());
                }

                if (parent.find('td.tAcc span').text() == 'null') {
                    parent.find('td.tAcc input').val('');
                }
                else {
                    parent.find('td.tAcc input').val(parent.find('td.tAcc span').text());
                }

                if (parent.find('td.gAcc span').text() == 'null') {
                    parent.find('td.gAcc input').val('');
                }
                else {
                    parent.find('td.gAcc input').val(parent.find('td.gAcc span').text());
                }

                console.log(parent.find('td.team .team1').text());
                parent.find('td.team select').val(parent.find('td.team .team1').text());
                console.log(parent.find('td.team select').val());

                parent.find('td.team select').select2({
                    placeholder: "Select Team",
                    width: '100%'
                });;

                parent.find('.viewMode').hide();
                parent.find('.editMode').show();
                parent.find('.elemEdit').hide();
                parent.find('.elemDelete').hide();
                parent.find('.elemSave').show();
                parent.find('.elemCancel').show();
            });

            $('.elemDelete').click(function() {
                var elemId = $(this).parents('tr').attr('elemId');
                var url = '@Url.Action("RemoveDeveloper")';
                var fn = $(this).parents('tr').find('td.fName span').text();
                var ln = $(this).parents('tr').find('td.lName span').text();
                if (confirm('The developer ' + fn + ' ' + ln + ' will be deleted.')) {
                    $.post(url, { 'rowKey': elemId }, function (data) {
                        $.generateTable(data.Json, data.Teams);
                        $.showMessage('success', 'Developer removed', []);
                    });
                }
            });

            $('.elemSave').click(function() {
                var elemId = $(this).parents('tr').attr('elemId');
                if (!$.validateUser(elemId)) {
                    return;
                }
                var url = '@Url.Action("SaveDeveloper", "Home")';
                if (confirm('Save developer?')) {
                    $.post(url,
                        {
                            'dev': {
                                'RowKey': elemId,
                                'Email': $('tr[elemId="' + elemId + '"] td.email input').val(),
                                'FirstName': $('tr[elemId="' + elemId + '"] td.fName input').val(),
                                'LastName': $('tr[elemId="' + elemId + '"] td.lName input').val(),
                                'TelegramAcc': $('tr[elemid="' + elemId + '"] td.tAcc input').val(),
                                'GithubAcc': $('tr[elemId="' + elemId + '"] td.gAcc input').val(),
                                'Team': $('tr[elemId="' + elemId + '"] td.team select option:selected').val(),
                            }
                        },
                        function (data) {
                            var row = $('.editItems table tr[elemId="' + elemId + '"]');
                            if (data.Result == '@ResultCode.EmailAlreadyExists') {
                                $.showMessage('error', 'Developer with this email aready exists', []);
                                row.find('td.email input').addClass('error');
                            }
                            else if (data.Result == '@ResultCode.TelegramAlreadyExists') { 
                                $.showMessage('error', 'Developer with this Telegram account aready exists', []);
                                row.find('td.tAcc input').addClass('error');
                            }
                            else if (data.Result == '@ResultCode.GitAlreadyExists') {
                                $.showMessage('error', 'Developer with this Github account aready exists', []);
                                row.find('td.gAcc input').addClass('error');
                             }
                            else {
                                $.generateTable(data.Json, data.Teams);
                                $.showMessage('success', 'Developer saved', []);
                            }

                        });
                }
            });

            $(".elemCancel").click(function() {
                var parent = $(this).parents('tr');
                if (parent.attr('elemId') == '*') {
                    var inputs = parent.find('input[type=text]');
                    inputs.val('');
                    inputs.removeClass('error');
                    var checkBoxes = parent.find('input[type=checkbox]');
                    checkBoxes.removeAttr('checked');
                } else {
                    parent.find('.editMode').val(parent.find('td.email span').text());
                    parent.find('td.fName input').val(parent.find('td.fName span').text());
                    parent.find('td.lName input').val(parent.find('td.lName span').text());
                    parent.find('td.tAcc input').val(parent.find('td.tAcc span').text());
                    parent.find('td.gAcc input').val(parent.find('td.gAcc span').text());
                    parent.find('td.team input').val(parent.find('td.team span').text());

                    parent.find('.viewMode').show();
                    parent.find('.editMode').hide();
                    parent.find('.elemEdit').show();
                    parent.find('.elemDelete').show();
                    parent.find('.elemSave').hide();
                    parent.find('.elemCancel').hide();
                }
            });


        }

        $.validateUser = function (userId) {
            var row = $('.editItems table tr[elemId="' + userId + '"]');
            if (row.length == 0) {
                return;
            }

            var valid = true;
            if (row.find('td.email input').val().trim() == '') {
                row.find('td.email input').removeClass('error');
            }
            else if (!$.validateEmail(row.find('td.email input').val()))
            {
                row.find('td.email input').addClass('error');
                valid = false;
            } else {
                row.find('td.email input').removeClass('error');
            }

            if (row.find('td.gAcc input').val().trim() == '') {
                row.find('td.gAcc input').addClass('error');
               // valid = false;
            } else {
                row.find('td.gAcc input').removeClass('error');
            }

            if (row.find('td.tAcc input').val().trim() == '') {
                row.find('td.tAcc input').addClass('error');
                //valid = false;
            } else {
                row.find('td.tAcc input').removeClass('error');
            }

            return valid;
        };

        $.validateEmail = function (email) {
            var re =
                /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(email);
        }

        $.generateTable('@Html.Raw(JsonConvert.SerializeObject(Model.Developers).Replace("'", "\\'").Replace("\"", "\\\""))', '@Html.Raw(JsonConvert.SerializeObject(Model.Teams).Replace("'", "\\'").Replace("\"", "\\\""))' );
    });
</script>
}
